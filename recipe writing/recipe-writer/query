#!/usr/bin/env python3
"""
Simple CLI for recipe queries.
Usage: ./query "your search query here"
"""

import json
import sys
import os
import argparse

# Add parent directory to path to import tools
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from tools import airtable_sync, embeddings, vector_store, retrieval, generator, html_formatter
from config import *

def main():
    if len(sys.argv) < 2:
        print("Usage: ./query \"your search query here\"")
        print("Example: ./query \"12 italian dinners you don't wanna miss\"")
        sys.exit(1)
    
    query = " ".join(sys.argv[1:])
    
    print(f"Searching for: {query}")
    
    # Load recipes with embeddings
    print("Loading recipes with embeddings...")
    recipes = embeddings.load_embeddings()

    # Load FAISS index
    print("Loading FAISS index...")
    index = vector_store.load_faiss_index()
    id_to_recipe = vector_store.get_id_to_recipe(recipes)

    # Extract number from query (default to 5 if no number found)
    import re
    numbers = re.findall(r'\d+', query)
    k = int(numbers[0]) if numbers else 5

    # Retrieve recipes
    top_recipes = retrieval.search_recipes(query, index, id_to_recipe, k=k)
    
    print(f"Found {len(top_recipes)} matching recipes")

    # Generate professional article
    print("Generating professional article...")
    article_content = generator.generate_professional_article(query, top_recipes)

    print("=== Professional Article ===\n", article_content)

if __name__ == "__main__":
    main()
